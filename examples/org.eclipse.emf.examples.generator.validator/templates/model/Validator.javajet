<%@ jet package="org.eclipse.emf.examples.generator.validator.templates.model" class="Validator" imports="java.util.* org.eclipse.emf.codegen.ecore.genmodel.* org.eclipse.emf.examples.generator.validator.ValidatorGeneratorUtil"%>
<%GenClass genClass = (GenClass)argument; GenPackage genPackage = genClass.getGenPackage(); GenModel genModel = genPackage.getGenModel();%>
<%@ include file="../Header.javajetinc"%>
package <%=ValidatorGeneratorUtil.getValidationPackageName(genPackage)%>;

<%genModel.markImportLocation(stringBuffer);%>

/**
 * A sample validator interface for {@link <%=genClass.getQualifiedInterfaceName()%>}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 */
public interface <%=ValidatorGeneratorUtil.getValidatorInterfaceName(genClass)%>
{
	boolean validate();

  <%for (Iterator fIter = genClass.getGenFeatures().iterator(); fIter.hasNext(); ) { GenFeature genFeature = (GenFeature)fIter.next(); %>
	boolean validate<%=genFeature.getAccessorName()%>(<%=genFeature.getImportedType()%> value);
  <%}%>
}
<%genModel.emitSortedImports();%>
